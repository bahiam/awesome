/** Configura CET Source Copyright Notice (CETSC)

   This file contains Configura CM source code and is part of the
   Configura CET Development Platform (CETDEV). Configura CM
   is a programming language created by Configura Sverige AB.
   Configura, Configura CET and Configura CM are trademarks of
   Configura Sverige AB. Configura Sverige AB owns Configura CET,
   Configura CM, and CETDEV.

   Copyright (C) 2004 Configura Sverige AB, All rights reserved.

   You can modify this source file under the terms of the Configura CET
   Source Licence Agreement (CETSL) as published by Configura Sverige AB.

   Configura Sverige AB has exclusive rights to all changes, modifications,
   and corrections of this source file. Configura Sverige AB has exclusive
   rights to any new source file containing material from this source file.
   A new source file based on this source file or containing material from
   this source file has to include this Configura CET Source Copyright Notice
   in its full content. All changes, modifications, and corrections mentioned
   above shall be reported to Configura Sverige AB within One Month from
   the date that the modification occurred.

   Configura CM is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   See the CETSL for more details.

   You should have received a copy of the CETSL along with the CETDEV.
   If not, write to Configura Sverige AB, Box 306, SE-581 02 LinkÃ¶ping, Sweden.
   Tel +46 13377800, Fax +46 13377855,
   Email: info@configura.com, www.configura.com

   END OF CETSC
*/

package custom.awesome.product;

use custom.awesome.electrical;

public class AweGeometry {
    public Object _model;

    private str->Point2D poi() : public readable;
    private str->Line2D loi() : public readable;
    private str->Graph goi() : public readable;
    private AwePart[] parts() : public readable;

    public constructor() {
    }   

    extend public Primitive3D medium3D() {
        return null;
    }

    extend public Primitive3D super3D() {
        return medium3D();
    }

    extend public Graph graph() {
        return null;
    }

    extend public box localBound() {
        return box();
    }

    extend public void createParts() {
    }

    extend public void addPart(AwePart part, int quantity=1) {
        for (i in (1..quantity)) {
            this.parts << part;
        }
    }

   extend public void addPart(str catalog, str sku, int quantity=1) {
        for (i in (1..quantity)) {
            this.parts << new AwePart(catalog, sku);
        }
    }

    extend public AwePart[] getParts() {
        this.parts.clear();
        this.createParts();
        
        return this.parts;
    }

    extend public void validate(AweValidationIssues issues) {

    }

    /********** lights ************/
    public AweLightModel[] lights();

    extend public void buildLights() {
        
    }

    extend public void addLightPoint(point position, vector direction = (0,0,-1), double intensity=0.2) {
        lights << AweLightModel(position, direction, intensity);
    }

}